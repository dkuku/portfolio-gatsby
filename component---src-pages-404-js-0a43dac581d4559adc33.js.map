{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","rel","href","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","Menu","size","inverted","style","borderRadius","Container","Item","as","Link","to","Icon","position","Footer","id","Segment","vertical","height","Grid","divided","stackable","Row","Column","width","Header_Header","Component","Layout","gatsby_browser_entry","seo","className","header","footer_Footer","_755544856"],"mappings":"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","file":"component---src-pages-404-js-0a43dac581d4559adc33.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link\n              rel=\"stylesheet\"\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Menu, Container, Icon } from 'semantic-ui-react'\n\nconst Header = ({ siteTitle }) => (\n  <Menu size=\"large\" inverted style={{ borderRadius: 0 }}>\n    <Container>\n      <Menu.Item as={Link} to=\"/\">\n        <Icon name=\"home\" /> Home\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item as={Link} to=\"/blog\">\n          <Icon name=\"edit\" />\n          Blog\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/projects\">\n          <Icon name=\"code\" />\n          Projects\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/about\">\n          <Icon name=\"user\" />\n          About Me\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/contact\">\n          <Icon name=\"mail\" />\n          Contact\n        </Menu.Item>\n      </Menu.Menu>\n    </Container>\n  </Menu>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Header, Grid, Segment, Container } from 'semantic-ui-react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div id=\"footer\">\n        <Segment inverted vertical style={{ height: '100%' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={7}>\n                  <Header as=\"h4\" inverted>\n                    Created by:\n                  </Header>\n                  <p>\n                    Daniel Kukula\n                    <br />\n                    All Rights Reserved\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport SEO from './seo'\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `Daniel`,\n            `Kukula`,\n            `portfolio`,\n            `developer`,\n            `rails`,\n            `react`,\n          ]}\n        />\n        <div className=\"site\">\n          <div className=\"site-content\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            {children}\n          </div>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}