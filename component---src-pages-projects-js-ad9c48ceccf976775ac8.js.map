{"version":3,"sources":["webpack:///./src/components/Techlist.js","webpack:///./src/components/Project.js","webpack:///./src/pages/projects.js","webpack:///./src/constants.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"names":["Techlist","props","tech","map","key","Project","project","title","img","desc","color","description","technology","link","Card","centered","raised","href","target","Image","src","concat","Content","Label","style","marginBottom","ribbon","Header","Meta","Description","extra","Projects","keywords","Container","Group","projects","r","index","num","resumeUrl","CardDescription","children","className","content","textAlign","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","CardHeader","CardMeta","CardContent","header","meta","val","autoGenerateKey","CardGroup","doubling","items","itemsPerRow","stackable","itemsJSX","item","join","_Component","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","e","onClick","value","_this$props","fluid","image","handleClick","create"],"mappings":"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","file":"component---src-pages-projects-js-ad9c48ceccf976775ac8.js","sourcesContent":["import React from 'react'\n\nconst Techlist = props => (\n  <div>\n    <ul>\n      {props.tech.map(tech => (\n        <li key={tech}>{tech}</li>\n      ))}\n    </ul>\n  </div>\n)\n\nexport default Techlist\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Label, Image } from 'semantic-ui-react'\nimport Techlist from './Techlist'\n\nconst Project = project => {\n  const { title, img, desc, color, description, technology, link } = project\n\n  return (\n    <Card centered raised href={link} target=\"_blank\">\n      <Image src={'images/'.concat(img)} />\n      <Card.Content>\n        <Label style={{ marginBottom: '0.5em' }} color={color} ribbon>\n          {technology[0]}\n        </Label>\n        <Card.Header>{title}</Card.Header>\n        <Card.Meta>{desc}</Card.Meta>\n        <Card.Description>{description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Techlist tech={technology} />\n      </Card.Content>\n    </Card>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  technology: PropTypes.arrayOf(PropTypes.string).isRequired,\n  color: PropTypes.string,\n  link: PropTypes.string,\n}\n\nexport default Project\n","import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { Card, Container } from 'semantic-ui-react'\nimport Project from '../components/Project'\nimport { projects } from '../constants'\n\nconst Projects = () => (\n  <Layout>\n    <SEO\n      title=\"Home\"\n      keywords={[\n        `Daniel`,\n        `Kukula`,\n        `portfolio`,\n        `developer`,\n        `rails`,\n        `react`,\n        'ruby',\n      ]}\n    />\n    <Container style={{ marginBottom: '1em' }}>\n      <Card.Group>\n        {projects.map((r, index) => {\n          return <Project key={index} num={index} {...r} />\n        })}\n      </Card.Group>\n    </Container>\n  </Layout>\n)\n\nexport default Projects\n","export const projects = [\n  {\n    title: 'Miniswepper',\n    img: 'miniswepper.png',\n    desc: 'simple mines game',\n    description: 'Project made on a rainy afternoon, biggest chalenge was the flood fill implementation. n! is always the first to implement ;)',\n    technology: ['React', 'Algorithms'],\n    link: 'https://dkuku.github.io/miniswepper/',\n    color: 'violet',\n  },\n  {\n    title: 'Vehiclefinder',\n    img: 'vehiclefinder.jpg',\n    desc: 'Car catalog',\n    description: 'Project made as a demo for my current job. Backend uses ruby on rails. Challenge, port it to flask - company wanted a flask version',\n    technology: ['Flask', 'Rails', 'Bootstrap'],\n    link: 'https://peaceful-shore-28797.herokuapp.com/',\n    color: 'teal',\n  },\n  {\n    title: 'Neighborhood',\n    img: 'neighborhood.jpg',\n    desc: 'Aid plaform for my neighbourhood',\n    description:\n      'Project made for Openclassrooms Full Stack Path. Full stack app. Backend uses ruby on rails, Frontend uses react ecosystem',\n    technology: ['React', 'Redux', 'Rails', 'Google maps', 'Semantic-UI'],\n    link: 'https://neighboorhelp.herokuapp.com/',\n    color: 'pink',\n  },\n  {\n    title: 'Boulder Bike Tour',\n    img: 'bbt.jpg',\n    desc: 'Website for Mountain Bike Race',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. The goal of this project was to learn using external api and create own',\n    technology: ['React', 'Rails', 'flickr-api', 'Google maps'],\n    link: 'https://boulderbiketour.herokuapp.com',\n    color: 'green',\n  },\n  {\n    title: 'Move and Groove',\n    img: 'mandg.jpg',\n    desc: 'Fitness Tracker',\n    description:\n      'Project made for Openclassrooms Full-stack Developer path. Website allow to register and add activities to user profile',\n    technology: ['Rails', 'Devise gem', 'Bootstrap'],\n    link: 'https://mandgruby.herokuapp.com/',\n    color: 'blue',\n  },\n  {\n    title: 'Chalets and Caviar',\n    img: 'Chalets.jpg',\n    desc: 'Website for Real Estate Agency',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. Website made using wordpress and some additional plugins',\n    technology: ['wordpress'],\n    link: 'http://dev-daniel-project2.pantheonsite.io/',\n    color: 'yellow',\n  },\n  {\n    title: 'Brooklyn Outdoor Film Festival',\n    img: 'Festival.jpg',\n    desc: 'Website prototype for a Film Festival',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. Frontend made using bootstrap and svg for diagonal sections',\n    technology: ['bootstrap', 'html', 'js', 'svg'],\n    link: 'https://dkuku.github.io/brooklyn-film-festival/',\n    color: 'teal',\n  },\n  {\n    title: 'Chat app',\n    img: 'chat.png',\n    desc: 'Chat app written in node.js',\n    description:\n      \"Project for Andrew Mead's Complete node.js Developer Course. Application uses node.js express and socket.io. A couple of users can login to the same room and chat.\",\n    technology: ['node.js', 'socket.io', 'express'],\n    link: 'https://chat-node-by-kuku.herokuapp.com/',\n    color: 'purple',\n  },\n  {\n    title: 'Todo App',\n    img: 'todo.png',\n    desc: 'Simple todo app',\n    description:\n      \"Project for Colt Steel's The Web Developer Bootcamp extended by me\",\n    technology: ['jQuery', 'html', 'css', 'js'],\n    link: 'https://dkuku.github.io/todo-list/',\n    color: 'orange',\n  },\n  {\n    title: 'Rice Rocks',\n    img: 'Asteroids.jpg',\n    desc: 'Asteroids Clone',\n    description:\n      'Game made using python and codeskulptor for Interactive Python course on Coursera',\n    technology: ['object oriented python', 'codeskulptor', 'simple gui'],\n    link: 'http://www.codeskulptor.org/#user16_T5YN7P0gBI_6.py',\n    color: 'red',\n  },\n  {\n    title: 'RGB Game',\n    img: 'rgb-game.png',\n    desc: 'Color guessing game',\n    description:\n      \"Project for Colt Steel's The Web Developer Bootcamp. Game made using html, css and javascript\",\n    technology: ['js', 'html', 'css'],\n    link: 'https://dkuku.github.io/rgb-game/',\n    color: 'brown',\n  },\n  {\n    title: 'Portfolio',\n    img: 'portfolio.jpg',\n    desc: 'Portfolio site',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. Made using react, react-router and semantic-ui',\n    technology: ['react', 'react-router', 'semantic-ui'],\n    link: 'https://github.com/dkuku/portfolio-website',\n    color: 'violet',\n  },\n]\nexport const resumeUrl = 'https://gist.githubusercontent.com/dkuku/dff38e7ff269f0515275d131b386dbec/raw/resume.json'\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import \"core-js/modules/es6.string.link\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};"],"sourceRoot":""}