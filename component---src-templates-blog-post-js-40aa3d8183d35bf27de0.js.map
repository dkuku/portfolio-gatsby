{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","Template","_ref","data","pathContext","location","post","markdownRemark","frontmatter","html","title","date","next","prev","a","createElement","as","dangerouslySetInnerHTML","__html","to","path","StaticQuery","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","rel","href","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","Menu","size","inverted","style","borderRadius","Container","Item","Link","Icon","position","Footer","id","Segment","vertical","height","Grid","divided","stackable","Row","Column","width","Header_Header","Component","Layout","gatsby_browser_entry","seo","className","header","footer_Footer","_755544856"],"mappings":"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","file":"component---src-templates-blog-post-js-40aa3d8183d35bf27de0.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport {graphql} from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport { Icon, Header, Button, Container } from 'semantic-ui-react'\n\nconst Template = ({ data, location, pathContext }) => {\n  const { markdownRemark: post } = data\n  const { frontmatter, html } = post\n  const { title, date } = frontmatter\n  const { next, prev } = pathContext\n\n  return (\n    <Layout>\n      <Helmet title={`${title} - My Blog`} />\n      <Container>\n        <Header>{title}</Header>\n        <Header as=\"h3\">{date}</Header>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n        <p>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous: {prev.frontmatter.title}\n            </Link>\n          )}\n        </p>\n        <p>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next: {next.frontmatter.title}\n            </Link>\n          )}\n        </p>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM, DD, YYYY\")\n        path\n        tags\n        excerpt\n      }\n    }\n  }\n`\n\nexport default Template\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link\n              rel=\"stylesheet\"\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Menu, Container, Icon } from 'semantic-ui-react'\n\nconst Header = ({ siteTitle }) => (\n  <Menu size=\"large\" inverted style={{ borderRadius: 0 }}>\n    <Container>\n      <Menu.Item as={Link} to=\"/\">\n        <Icon name=\"home\" /> Home\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item as={Link} to=\"/blog\">\n          <Icon name=\"edit\" />\n          Blog\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/projects\">\n          <Icon name=\"code\" />\n          Projects\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/about\">\n          <Icon name=\"user\" />\n          About Me\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/contact\">\n          <Icon name=\"mail\" />\n          Contact\n        </Menu.Item>\n      </Menu.Menu>\n    </Container>\n  </Menu>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Header, Grid, Segment, Container } from 'semantic-ui-react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div id=\"footer\">\n        <Segment inverted vertical style={{ height: '100%' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={7}>\n                  <Header as=\"h4\" inverted>\n                    Created by:\n                  </Header>\n                  <p>\n                    Daniel Kukula\n                    <br />\n                    All Rights Reserved\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport SEO from './seo'\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `Daniel`,\n            `Kukula`,\n            `portfolio`,\n            `developer`,\n            `rails`,\n            `react`,\n          ]}\n        />\n        <div className=\"site\">\n          <div className=\"site-content\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            {children}\n          </div>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}