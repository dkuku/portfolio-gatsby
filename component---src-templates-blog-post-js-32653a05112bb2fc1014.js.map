{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","Template","_ref","data","pathContext","location","post","markdownRemark","frontmatter","html","title","date","next","prev","a","createElement","as","dangerouslySetInnerHTML","__html","to","path","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","rel","href","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","Menu","size","inverted","style","borderRadius","Container","Item","Link","Icon","position","Footer","id","Segment","vertical","height","Grid","divided","stackable","Row","Column","width","Header_Header","Component","Layout","gatsby_browser_entry","Fragment","seo","className","header","footer_Footer","_755544856","node"],"mappings":"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","file":"component---src-templates-blog-post-js-32653a05112bb2fc1014.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport { Icon, Header, Button, Grid } from 'semantic-ui-react'\n\nconst Template = ({ data, location, pathContext }) => {\n  const { markdownRemark: post } = data\n  const { frontmatter, html } = post\n  const { title, date } = frontmatter\n  const { next, prev } = pathContext\n\n  return (\n    <Layout>\n      <Helmet title={`${title} - My Blog`} />\n      <div>\n        <Header>{title}</Header>\n        <Header as=\"h3\">{date}</Header>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n        <p>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous: {prev.frontmatter.title}\n            </Link>\n          )}\n        </p>\n        <p>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next: {next.frontmatter.title}\n            </Link>\n          )}\n        </p>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM, DD, YYYY\")\n        path\n        tags\n        excerpt\n      }\n    }\n  }\n`\n\nexport default Template\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link\n              rel=\"stylesheet\"\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Menu, Container, Icon } from 'semantic-ui-react'\n\nconst Header = ({ siteTitle }) => (\n  <Menu size=\"large\" inverted style={{ borderRadius: 0 }}>\n    <Container>\n      <Menu.Item as={Link} to=\"/\">\n        <Icon name=\"home\" /> Home\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item as={Link} to=\"/blog\">\n          <Icon name=\"edit\" />\n          Blog\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/projects\">\n          <Icon name=\"code\" />\n          Projects\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/about\">\n          <Icon name=\"user\" />\n          About Me\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/contact\">\n          <Icon name=\"mail\" />\n          Contact\n        </Menu.Item>\n      </Menu.Menu>\n    </Container>\n  </Menu>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Header, Grid, Segment, Container } from 'semantic-ui-react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div id=\"footer\">\n        <Segment inverted vertical style={{ height: '100%' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={7}>\n                  <Header as=\"h4\" inverted>\n                    Created by:\n                  </Header>\n                  <p>\n                    Daniel Kukula\n                    <br />\n                    All Rights Reserved\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport SEO from './seo'\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `Daniel`,\n            `Kukula`,\n            `portfolio`,\n            `developer`,\n            `rails`,\n            `react`,\n          ]}\n        />\n        <div className=\"site\">\n          <div className=\"site-content\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            {children}\n          </div>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}