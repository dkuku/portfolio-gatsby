{"version":3,"sources":["webpack:///./src/components/TimeLine.js","webpack:///./src/pages/worktimeline.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js","webpack:///./src/constants.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"names":["TimelineResume","render","this","props","direction","icon","startDate","endDate","website","company","highlights","position","summary","labelColor","lineColor","color","textAlign","card","Card","fluid","raised","Content","Label","pointing","attached","style","marginLeft","Detail","className","Header","Meta","href","Description","Divider","Group","map","highlight","i","key","toString","left","right","iconSize","window","innerWidth","Grid","Row","paddingBottom","Column","width","zIndex","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","Icon","name","size","inverted","circular","margin","boxShadow","Component","defaultProps","startTime","endTime","WorkTimeline","useState","resume","setResume","useEffect","fetch","resumeUrl","then","res","json","title","keywords","Container","marginBottom","work","r","index","console","log","children","clearing","content","fitted","hidden","horizontal","section","vertical","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","projects","img","desc","description","technology","link","CardDescription","getUnhandledProps","getElementType","CardHeader","CardMeta","CardContent","extra","header","meta","val","autoGenerateKey","CardGroup","centered","doubling","items","itemsPerRow","stackable","itemsJSX","item","join","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","e","onClick","value","_this$props","image","handleClick","Image","create"],"mappings":"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","file":"component---src-pages-worktimeline-js-677147e832edc2c51b35.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid, Card, Label, Icon, Divider\n} from 'semantic-ui-react';\nimport 'fomantic-ui-css/semantic.css';\n\nclass TimelineResume extends Component {\n  render() {\n    const {\n       direction,\n       icon,\n       startDate,\n       endDate,\n       website,\n       company,\n       highlights,\n       position,\n       summary,\n       labelColor,\n       lineColor = 'grey',\n       color = 'grey'\n    } = this.props;\n    const textAlign = direction === 'left' ? 'right' : 'left';\n    const card = (\n        <Card fluid raised color={color}>\n          <Card.Content>\n            <Label pointing={textAlign} color={labelColor ? labelColor : color} attached=\"top\" style={{ marginLeft: '0' }}>\n                <Label.Detail>\n                  {`from: ${startDate}`}\n                </Label.Detail>\n                {endDate && <Label.Detail className=\"floated right\">\n                  {`to: ${endDate}`}\n                </Label.Detail>}\n            </Label>\n            <Card.Header>\n              {position}\n            </Card.Header>\n            <Card.Meta>\n              <a href={website}>\n              {company}\n            </a>\n            </Card.Meta>\n            <Card.Description>\n              {summary}\n            </Card.Description>\n            <Divider />\n            <Label.Group color={color}>\n              {highlights.map((highlight, i) => (\n                <Label key={i.toString()}>\n                  {highlight}\n                </Label>\n              ))}\n            </Label.Group>\n          </Card.Content>\n        </Card>\n    );\n\n    const left = direction === 'left' ? card : '';\n    const right = direction === 'right' ? card : '';\n    const isMobile = window.innerWidth <= 768;\n    const iconSize = isMobile ? 'small' : 'large';\n\nconst TimelineStyle = {\n  zIndex: '-1',\n backgroundImage: \"linear-gradient(#000, #000)\",\n  backgroundSize: \"2px 100%\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"center center\",\n}\n    return (\n      <div>\n        <Grid>\n          <Grid.Row style={{paddingBottom: \"0px\"}}>\n            <Grid.Column width={2} />\n            <Grid.Column width={5}>\n              {left}\n            </Grid.Column>\n            <Grid.Column width={2} textAlign=\"center\" style={{...TimelineStyle}}>\n              <Icon name={icon} \n                size={iconSize} \n                color={color} \n                inverted \n                circular \n                style={{ margin: 'auto', boxShadow: `0 0 0 0.1em ${lineColor} inset` }} />\n            </Grid.Column>\n            <Grid.Column width={5}>\n              {right}\n            </Grid.Column>\n            <Grid.Column width={2} />\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nTimelineResume.propTypes = {\n  direction: PropTypes.string,\n  icon: PropTypes.string,\n  position: PropTypes.string,\n  startTime: PropTypes.string,\n  endTime: PropTypes.string,\n  website: PropTypes.string,\n  company: PropTypes.string,\n  summary: PropTypes.string,\n  color: PropTypes.string,\n};\nTimelineResume.defaultProps = {\n  direction : \"\",\n  icon      : \"user\",\n  position  : \"\",\n  startTime : \"\",\n  endTime   : \"\",\n  website   : \"\",\n  company   : \"\",\n  summary   : \"\",\n  color     : \"\",\n}\nexport default TimelineResume;\n","import React, { useState, useEffect } from 'react';\nimport TimelineResume from '../components/TimeLine';\nimport { Container } from 'semantic-ui-react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { resumeUrl } from '../constants';\n\nconst WorkTimeline = () => {\nconst [ resume, setResume ] = useState({})\nconst color = ['orange', 'olive', 'red',  'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black']\n\n  useEffect(() =>{\n    const fetchResume = () => (\n    fetch(resumeUrl)\n      .then(res => res.json())\n      .then(setResume))\n    fetchResume()},\n    []\n  )\n  return (\n  <Layout>\n    <SEO\n      title=\"Home\"\n      keywords={[\n        `Daniel`,\n        `Kukula`,\n        `portfolio`,\n        `developer`,\n        `rails`,\n        `react`,\n        'ruby',\n      ]}\n    />\n <Container style={{ marginBottom: '1em' }}>\n   {resume.work && resume.work.map((r, index) => {\n   {console.log(r)}\n          return <TimelineResume\n            key={index}\n            direction= {index % 2 ? \"right\" : \"left\"}\n            position={ r.position }\n            website={ r.website }\n            company={ r.company }\n            summary={ r.summary }\n            startDate={r.startDate}\n            endDate={r.endDate}\n            color={color[index % 13]}\n            highlights={r.highlights}\n          />\n })}\n    </Container>\n  </Layout>\n  )\n }\n\nexport default WorkTimeline\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","export const projects = [\n  {\n    title: 'Miniswepper',\n    img: 'miniswepper.png',\n    desc: 'simple mines game',\n    description: 'Project made on a rainy afternoon, biggest chalenge was the flood fill implementation. n! is always the first to implement ;)',\n    technology: ['React', 'Algorithms'],\n    link: 'https://dkuku.github.io/miniswepper/',\n    color: 'violet',\n  },\n  {\n    title: 'Vehiclefinder',\n    img: 'vehiclefinder.jpg',\n    desc: 'Car catalog',\n    description: 'Project made as a demo for my current job. Backend uses ruby on rails. Challenge, port it to flask - company wanted a flask version',\n    technology: ['Flask', 'Rails', 'Bootstrap'],\n    link: 'https://peaceful-shore-28797.herokuapp.com/',\n    color: 'teal',\n  },\n  {\n    title: 'Neighborhood',\n    img: 'neighborhood.jpg',\n    desc: 'Aid plaform for my neighbourhood',\n    description:\n      'Project made for Openclassrooms Full Stack Path. Full stack app. Backend uses ruby on rails, Frontend uses react ecosystem',\n    technology: ['React', 'Redux', 'Rails', 'Google maps', 'Semantic-UI'],\n    link: 'https://neighboorhelp.herokuapp.com/',\n    color: 'pink',\n  },\n  {\n    title: 'Boulder Bike Tour',\n    img: 'bbt.jpg',\n    desc: 'Website for Mountain Bike Race',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. The goal of this project was to learn using external api and create own',\n    technology: ['React', 'Rails', 'flickr-api', 'Google maps'],\n    link: 'https://boulderbiketour.herokuapp.com',\n    color: 'green',\n  },\n  {\n    title: 'Move and Groove',\n    img: 'mandg.jpg',\n    desc: 'Fitness Tracker',\n    description:\n      'Project made for Openclassrooms Full-stack Developer path. Website allow to register and add activities to user profile',\n    technology: ['Rails', 'Devise gem', 'Bootstrap'],\n    link: 'https://mandgruby.herokuapp.com/',\n    color: 'blue',\n  },\n  {\n    title: 'Chalets and Caviar',\n    img: 'Chalets.jpg',\n    desc: 'Website for Real Estate Agency',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. Website made using wordpress and some additional plugins',\n    technology: ['wordpress'],\n    link: 'http://dev-daniel-project2.pantheonsite.io/',\n    color: 'yellow',\n  },\n  {\n    title: 'Brooklyn Outdoor Film Festival',\n    img: 'Festival.jpg',\n    desc: 'Website prototype for a Film Festival',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. Frontend made using bootstrap and svg for diagonal sections',\n    technology: ['bootstrap', 'html', 'js', 'svg'],\n    link: 'https://dkuku.github.io/brooklyn-film-festival/',\n    color: 'teal',\n  },\n  {\n    title: 'Chat app',\n    img: 'chat.png',\n    desc: 'Chat app written in node.js',\n    description:\n      \"Project for Andrew Mead's Complete node.js Developer Course. Application uses node.js express and socket.io. A couple of users can login to the same room and chat.\",\n    technology: ['node.js', 'socket.io', 'express'],\n    link: 'https://chat-node-by-kuku.herokuapp.com/',\n    color: 'purple',\n  },\n  {\n    title: 'Todo App',\n    img: 'todo.png',\n    desc: 'Simple todo app',\n    description:\n      \"Project for Colt Steel's The Web Developer Bootcamp extended by me\",\n    technology: ['jQuery', 'html', 'css', 'js'],\n    link: 'https://dkuku.github.io/todo-list/',\n    color: 'orange',\n  },\n  {\n    title: 'Rice Rocks',\n    img: 'Asteroids.jpg',\n    desc: 'Asteroids Clone',\n    description:\n      'Game made using python and codeskulptor for Interactive Python course on Coursera',\n    technology: ['object oriented python', 'codeskulptor', 'simple gui'],\n    link: 'http://www.codeskulptor.org/#user16_T5YN7P0gBI_6.py',\n    color: 'red',\n  },\n  {\n    title: 'RGB Game',\n    img: 'rgb-game.png',\n    desc: 'Color guessing game',\n    description:\n      \"Project for Colt Steel's The Web Developer Bootcamp. Game made using html, css and javascript\",\n    technology: ['js', 'html', 'css'],\n    link: 'https://dkuku.github.io/rgb-game/',\n    color: 'brown',\n  },\n  {\n    title: 'Portfolio',\n    img: 'portfolio.jpg',\n    desc: 'Portfolio site',\n    description:\n      'Project for OpenClassrooms Full-stack Developer Path. Made using react, react-router and semantic-ui',\n    technology: ['react', 'react-router', 'semantic-ui'],\n    link: 'https://github.com/dkuku/portfolio-website',\n    color: 'violet',\n  },\n]\nexport const resumeUrl = 'https://gist.githubusercontent.com/dkuku/dff38e7ff269f0515275d131b386dbec/raw/resume.json'\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import \"core-js/modules/es6.string.link\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};"],"sourceRoot":""}