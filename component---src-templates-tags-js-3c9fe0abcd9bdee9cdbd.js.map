{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","Tags","_ref","pathContext","posts","tagName","a","createElement","map","post","to","frontmatter","path","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","rel","href","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","Menu","size","inverted","style","borderRadius","Container","Item","as","Link","Icon","position","Footer","id","Segment","vertical","height","Grid","divided","stackable","Row","Column","width","Header_Header","Component","Layout","gatsby_browser_entry","Fragment","seo","className","header","footer_Footer","_755544856","node"],"mappings":"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","file":"component---src-templates-tags-js-3c9fe0abcd9bdee9cdbd.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport Layout from '../components/layout'\n\nconst Tags = ({ pathContext }) => {\n  const { posts, tagName } = pathContext\n\n  if (posts) {\n    return (\n      <Layout>\n        <span>Posts about {tagName};</span>\n\n        <ul>\n          {posts.map(post => {\n            return (\n              <li>\n                <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default Tags\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link\n              rel=\"stylesheet\"\n              href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Menu, Container, Icon } from 'semantic-ui-react'\n\nconst Header = ({ siteTitle }) => (\n  <Menu size=\"large\" inverted style={{ borderRadius: 0 }}>\n    <Container>\n      <Menu.Item as={Link} to=\"/\">\n        <Icon name=\"home\" /> Home\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item as={Link} to=\"/blog\">\n          <Icon name=\"edit\" />\n          Blog\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/projects\">\n          <Icon name=\"code\" />\n          Projects\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/about\">\n          <Icon name=\"user\" />\n          About Me\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/contact\">\n          <Icon name=\"mail\" />\n          Contact\n        </Menu.Item>\n      </Menu.Menu>\n    </Container>\n  </Menu>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Header, Grid, Segment, Container } from 'semantic-ui-react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div id=\"footer\">\n        <Segment inverted vertical style={{ height: '100%' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={7}>\n                  <Header as=\"h4\" inverted>\n                    Created by:\n                  </Header>\n                  <p>\n                    Daniel Kukula\n                    <br />\n                    All Rights Reserved\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport SEO from './seo'\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            `Daniel`,\n            `Kukula`,\n            `portfolio`,\n            `developer`,\n            `rails`,\n            `react`,\n          ]}\n        />\n        <div className=\"site\">\n          <div className=\"site-content\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            {children}\n          </div>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}